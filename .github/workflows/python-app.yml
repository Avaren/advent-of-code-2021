# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Advent of Code Tests

on:
  push:
    branches: [ update-action ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.1.12"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      if: runner.os == 'Windows'
      with:
        path: ~/AppData/Roaming/Python/Scripts  # the path depends on the OS
        key: poetry-${{ runner.os }}-${{ matrix.poetry-version }}
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      if: runner.os != 'Windows'
      with:
        path: ~/.local  # the path depends on the OS
        key: poetry-${{ runner.os }}-${{ matrix.poetry-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ matrix.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Code quality with Black
      run: poetry run black . --check -t py310
    - name: Test with pytest
      run: poetry run pytest --cov .
